#!/bin/bash

readonly DOTFILES_DIRECTORY="${HOME}/.dotfiles"
readonly EXTRA_FILE_NAME=".gituserconfig"
readonly EXTRA_FILE_PATH="${HOME}/${EXTRA_FILE_NAME}"

RETVAL="0"

info() {
    printf "$(tput setaf 7)- %s$(tput sgr0)\n" "$@"
}

success() {
    printf "$(tput setaf 64)âœ“ %s$(tput sgr0)\n" "$@"
}

error() {
    printf "$(tput setaf 1)x %s$(tput sgr0)\n" "$@"
}

warning() {
    printf "$(tput setaf 136)! %s$(tput sgr0)\n" "$@"
}

# Ask for confirmation before proceeding
seek_confirmation() {
    warning "$@"
    read -p "? Continue (y/n) " -n 1
    printf "\n"
}

# Test whether the result of an `seek_confirmation` is a confirmation
is_confirmed() {
    if [[ "$REPLY" =~ ^[Yy]$ ]]; then
      return 0
    fi
    return 1
}

link() {
  ln -fs $1 $2
}

install_xcode_select() {
  if ! type xcode-select >&- && xpath=$( xcode-select --print-path ) && test -d "${xpath}" && test -x "${xpath}"; then
    info "Install xcode-select"
    xcode-select --install
    success "Success: xcode-select is installed to: $(xcode-select --print-path)"
  else
    info "Skipped: xcode-select has been installed to: $(xcode-select --print-path)"
  fi
}

install_homebrew() {
  if ! type_exists "brew"; then
    info "Install homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    success "Success: Homebrew is installed to: $(which brew)"
  else
    info "Skipped: Homebrew has been installed to: $(which brew)"
  fi
}

create_gituserconfig() {
  if [[ ! -e $EXTRA_FILE_PATH ]]; then
    cat <<EOT >> $EXTRA_FILE_PATH
# All
set AUTHOR_NAME                       "<Your Name>"
set AUTHOR_MAIL                       "<Your Email Address>"

# Git
set GIT_AUTHOR_NAME                   "\$AUTHOR_NAME"
set GIT_COMITTER_NAME                 "\$GIT_AUTHOR_NAME"
git config --global user.name         "\$GIT_COMITTER_NAME"

set GIT_AUTHOR_MAIL                   "\$AUTHOR_MAIL"
set GIT_COMITTER_EMAIL                "\$GIT_AUTHOR_MAIL"
git config --global user.email        "\$GIT_AUTHOR_MAIL"
EOT
    success "Success: ${EXTRA_FILE_NAME} is created to: ${EXTRA_FILE_PATH}"
  else
    info "Skipped:. ${EXTRA_FILE_NAME} has been created to: ${EXTRA_FILE_PATH}"
  fi 
}

make_symbolic_link() {
  for file in $( ls ${DOTFILES_DIRECTORY}/symlink/* )
  do
    link "${DOTFILES_DIRECTORY}/symlink/${file##*/}" "${HOME}/.${file##*/}"
  done
  success "Succss: Symbolic links are created"
}

modify_macos() {
  seek_confirmation "Warning: This step may modify your macOS system defaults."
  if is_confirmed; then
    bash $DOTFILES_DIRECTORY/lib/macos
    success "Success: Note: that some of these changes require a logout/restart to take effect."
  else
    info "Skipped: macOS settings update."
  fi
}

install_homebrew_fomulas() {
  if type_exists "brew"; then
    bash $DOTFILES_DIRECTORY/lib/brew.sh &> /dev/null
    bash $DOTFILES_DIRECTORY/lib/brew-cask.sh &> /dev/null
  fi
}


#######################################
# Setup
#######################################
bootstrap() {
  # Ask for the administrator password upfront
  sudo -v

  install_xcode_select

  install_homebrew

  create_gituserconfig

  make_symbolic_link

  modify_macos
#   install_homebrew_fomulas

#   # Change your default shell to "fish"
#   if ! type_exists "fish" && [[ $SHELL -eq "fish" ]]; then
#     info "Changing your default shell to \"fish\""
#     chsh -s /usr/local/bin/fish
#   else
#     success "Done. fish already installed"
#   fi

#   # Create extra file
#   if [[ ! -e $EXTRA_FILE_PATH ]]; then
#     cat <<EOT >> $EXTRA_FILE_PATH
# # All
# set AUTHOR_NAME                       "<Your Name>"
# set AUTHOR_MAIL                       "<Your Email Address>"

# # Git
# set GIT_AUTHOR_NAME                   "\$AUTHOR_NAME"
# set GIT_COMITTER_NAME                 "\$GIT_AUTHOR_NAME"
# git config --global user.name         "\$GIT_COMITTER_NAME"

# set GIT_AUTHOR_MAIL                   "\$AUTHOR_MAIL"
# set GIT_COMITTER_EMAIL                "\$GIT_AUTHOR_MAIL"
# git config --global user.email        "\$GIT_AUTHOR_MAIL"

# set GIT_AUTHOR_SIGNINGKEY             "xxxxxxxx"
# set GIT_COMMIT_SIGNINGKEY             "\$GIT_AUTHOR_SIGNINGKEY"
# git config --global user.signingkey   "\$GIT_AUTHOR_SIGNINGKEY"
# EOT
#   else
#     success "Done. ~/.extra already created"
#   fi

#   # Make symbolic link
#   for file in $( ls ${DOTFILES_DIRECTORY}/symlink/* )
#   do
#     link "${DOTFILES_DIRECTORY}/symlink/${file##*/}" "${HOME}/.${file##*/}"
#   done
#   success "Done. symbolic links are created."

#   # Ask before potentially overwriting OS X defaults
#   seek_confirmation "Warning: This step may modify your OS X system defaults."
#   if is_confirmed; then
#       bash $DOTFILES_DIRECTORY/lib/macos
#       success "Done. Note: that some of these changes require a logout/restart to take effect."
#   else
#       info "Skipped OS X settings update."
#   fi


    

    # info "1. sudo vim /etc/shells and add /usr/local/bin/fish bottom of the file."

    RETVAL="0"
}

#######################################
# Update itself
#######################################
update() {
  printf "\xf0\x9f\x9a\x80\x20 Pull origin master ..."
  git -C $DOTFILES_DIRECTORY reset --hard HEAD
  git -C $DOTFILES_DIRECTORY clean -fd
  git -C $DOTFILES_DIRECTORY pull --rebase
  cp -r  $DOTFILES_DIRECTORY/.config/fish/* ~/.config/fish/
  fish -c "source ~/.config/fish/config.fish"

  RETVAL="0"
}

main() {
  if [[ ! -d ${DOTFILES_DIRECTORY} ]]; then
    info "Install: the dotfile"
    git clone --depth=1 https://github.com/sotayamashita/dotfiles.git ${DOTFILES_DIRECTORY} &> /dev/null
    success "Success: The dotfiles is cloned to: ${DOTFILES_DIRECTORY}"
  fi
  
  source ${DOTFILES_DIRECTORY}/lib/utils

  for ARGUMENT in $@; do
    case "$ARGUMENT" in
      update)
        update
        ;;

      bootstrap)
        bootstrap
        ;;

      *)
        usage
        ;;
    esac
    if [ "$RETVAL" -ne 0 ]; then
      break
    fi
  done

  exit $RETVAL
}

main "$@"
